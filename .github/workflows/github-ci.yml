name: test_ci
on:
  pull_request:
    branches: [ "master" ]

jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo to VM (runner)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch origin
        run: git fetch origin master

      - name: Python setup
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y bc

      - name: Run linter
        run: |
          SCORE_LIMIT=9.9
          BASE=$(git merge-base origin/master HEAD)
          FILES=$(git diff --name-only --diff-filter=ACMR $BASE...HEAD | grep '\.py'$ | paste -sd' ' - || true)
          if [ -z "$FILES" ]; then
            echo "No python files has been changed, skipping linter"
          else
            echo "Changed files: $FILES"
            SCORE=$(pylint $FILES | grep 'Your code has been rated' | awk '{print $7}' | cut -d'/' -f1)
            echo "Static check score: $SCORE/10.0 - required: $SCORE_LIMIT"
            COMPARE=$(echo "$SCORE < $SCORE_LIMIT" | bc -l)
            if [ "$COMPARE" -eq 1 ]; then 
              echo "Code rating below threshold. Failing the job." 
              exit 1 
            fi
          fi

  test:
    name: Integration tests
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_ENV: ${{ secrets.DJANGO_ENV }}

    services:
      test_db:
        image: postgres:16-alpine3.20
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 60s
          --health-retries 5

    steps:
      - name: Clone repo to VM (runner)
        uses: actions/checkout@v3

      - name: Fetch origin
        run: git fetch origin master

      - name: Python setup
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django database setup
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          pytest --ignore=budget_app/tests/smoke/

  deploy_and_smoke:
    name: App deploy and smoke tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Clone repo to VM (runner)
        uses: actions/checkout@v3

      - name: Create .env files
        run: |
          cat <<EOF > .env_test
          DJANGO_ENV=${{ secrets.DJANGO_ENV }}
          DEBUG=${{ secrets.DEBUG }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_GENERIC_USERNAME=${{ secrets.DJANGO_GENERIC_USERNAME }}
          DJANGO_GENERIC_EMAIL=${{ secrets.DJANGO_GENERIC_EMAIL }}
          DJANGO_GENERIC_PASSWORD=${{ secrets.DJANGO_GENERIC_PASSWORD }}         
          EOF
          cat <<EOF > .env
          USER_NAME=${{ secrets.USER_NAME }}
          USER_PASSWD=${{ secrets.USER_PASSWD }}
          EOF

      - name: Set-up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and run docker container
        run: docker compose -f docker-compose.yaml -p myproj up -d

      - name: Run smoke tests
        run: docker exec -it tracker pytest budget_app/tests/smoke/